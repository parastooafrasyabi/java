
import java.awt.EventQueue;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;

import javax.swing.JFrame;
import javax.swing.JComboBox;
import javax.swing.JComponent;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;

import javax.swing.JPanel;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.JButton;
import javax.swing.BorderFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JList;
import javax.swing.DropMode;

public class ApplicationGUI  {

	private JFrame frame;
	private JTextField textField;
	private JTextField txtInputX_2;
	private JTextField txtInputY_2;
	private JTextField txtInputX_3;
	private JTextField txtInputY_3;
	private JTextField txtInputY_4;
	private JTextField txtInputY;
	private JTextField txtInputX;
	private JTextField txtInputY_1;
	private JTextField txtInputX_1;
	private JTextField txtInputX_4;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					ApplicationGUI window = new ApplicationGUI();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the application.
	 */
	public ApplicationGUI() {
		initialize();
	}

	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		
		
		
		Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
		double width = screenSize.getWidth();
		double height = screenSize.getHeight();
		frame = new JFrame();
		frame.setSize(screenSize);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		
		JLabel lblPleaseEnterNumber = new JLabel("Please enter number of shape");
		lblPleaseEnterNumber.setBounds(10, 11, 173, 23);
		frame.getContentPane().add(lblPleaseEnterNumber);
		
		JLabel lblSelectYourShape = new JLabel("Select your shape");
		lblSelectYourShape.setBounds(10, 57, 173, 23);
		frame.getContentPane().add(lblSelectYourShape);
		lblSelectYourShape.setVisible(false);
		
		JComboBox comboBox = new JComboBox();
		comboBox.setToolTipText("");
		comboBox.setModel(new DefaultComboBoxModel(new String[] {"rectangle", "trangle", "circle"}));
		comboBox.setSelectedIndex(0);
		comboBox.setBounds(116, 57, 89, 23);
		frame.getContentPane().add(comboBox);
		comboBox.setVisible(false);
		
		JButton btnPlot = new JButton("Plot");
		btnPlot.setBounds(116, 372, 89, 23);
		frame.getContentPane().add(btnPlot);
		btnPlot.setVisible(false);
		
		JPanel panel = new JPanel();
		panel.setBounds(10, 91, 195, 219);
		frame.getContentPane().add(panel);
		panel.setVisible(false);
		
		txtInputX = new JTextField();

		panel.add(txtInputX);
		txtInputX.setColumns(10);

		txtInputX.addFocusListener(new FocusListener() {
			
			@Override
			public void focusLost(FocusEvent arg0) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void focusGained(FocusEvent arg0) {
				// TODO Auto-generated method stub
				txtInputX.setText(null);
			}
		});
		
		txtInputY = new JTextField();

		panel.add(txtInputY);
		txtInputY.setColumns(10);

		txtInputY.addFocusListener(new FocusListener() {
			
			@Override
			public void focusLost(FocusEvent arg0) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void focusGained(FocusEvent arg0) {
				// TODO Auto-generated method stub
				txtInputY.setText(null);
			}
		});
		
		txtInputX_1 = new JTextField();

		panel.add(txtInputX_1);
		txtInputX_1.setColumns(10);

		txtInputX_1.addFocusListener(new FocusListener() {
			
			@Override
			public void focusLost(FocusEvent arg0) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void focusGained(FocusEvent arg0) {
				// TODO Auto-generated method stub
				txtInputX_1.setText(null);
			}
		});
		
		
		txtInputY_1 = new JTextField();

		panel.add(txtInputY_1);
		txtInputY_1.setColumns(10);

		txtInputY_1.addFocusListener(new FocusListener() {
			
			@Override
			public void focusLost(FocusEvent arg0) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void focusGained(FocusEvent arg0) {
				// TODO Auto-generated method stub
				txtInputY_1.setText(null);
			}
		});
		
		
		txtInputX_4 = new JTextField();

		panel.add(txtInputX_4);
		txtInputX_4.setColumns(10);

		txtInputX_4.addFocusListener(new FocusListener() {
			
			@Override
			public void focusLost(FocusEvent arg0) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void focusGained(FocusEvent arg0) {
				// TODO Auto-generated method stub
				txtInputX_4.setText(null);
			}
		});
		
		txtInputY_4 = new JTextField();

		panel.add(txtInputY_4);
		txtInputY_4.setColumns(10);

		txtInputY_4.addFocusListener(new FocusListener() {
			
			@Override
			public void focusLost(FocusEvent arg0) {
				// TODO Auto-generated method stub
				
			}
			
			@Override
			public void focusGained(FocusEvent arg0) {
				// TODO Auto-generated method stub
				txtInputY_4.setText(null);
			}
		});
		
		JLabel lblNewLabel = new JLabel("");
		lblNewLabel.setBounds(29, 345, 195, 23);
		frame.getContentPane().add(lblNewLabel);
		lblNewLabel.setVisible(false);
		
		JButton btnCalculateArea = new JButton("Calculate Area");
		btnCalculateArea.setBounds(10, 321, 195, 23);
		frame.getContentPane().add(btnCalculateArea);
		btnCalculateArea.setVisible(false);
	
		

		
		JButton btnEnter = new JButton("Enter");
		btnEnter.setBounds(116, 30, 89, 23);
		frame.getContentPane().add(btnEnter);
		
		btnEnter.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent arg0) {
				
				comboBox.setVisible(true);
				lblSelectYourShape.setVisible(true);
				btnPlot.setVisible(true);
				btnCalculateArea.setVisible(true);
				
			}
		});
		
		comboBox.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent arg0) {
				if(comboBox.getSelectedItem().toString().equals("rectangle")) {
					
					
					panel.setVisible(true);
					txtInputX.setText("Input X1");
					txtInputY.setText("Input Y1");
					txtInputX_1.setText("Input X2");
					txtInputY_1.setText("Input Y2");
					
					txtInputX.setVisible(true);
					txtInputY.setVisible(true);
					txtInputX_1.setVisible(true);
					txtInputY_1.setVisible(true);

					txtInputX_4.setVisible(false);
					txtInputY_4.setVisible(false);
					
				}
				
				 if (comboBox.getSelectedItem().toString().equals("trangle")) {
					
					
					panel.setVisible(true);
					txtInputX.setText("Input X1");
					txtInputY.setText("Input Y1");
					txtInputX_1.setText("Input X2");
					txtInputY_1.setText("Input Y2");
					txtInputX_4.setText("Input X3");
					txtInputY_4.setText("Input Y3");
					
					txtInputX.setVisible(true);
					txtInputY.setVisible(true);
					txtInputX_1.setVisible(true);
					txtInputY_1.setVisible(true);
					txtInputX_4.setVisible(true);
					txtInputY_4.setVisible(true);

					
				}
				
				 if (comboBox.getSelectedItem().toString().equals("circle")) {
					panel.setVisible(true);
					txtInputX.setText("Input X");
					txtInputY.setText("Input Y");
					txtInputX_1.setText("Input Radius");
					
					txtInputX.setVisible(true);
					txtInputY.setVisible(true);
					txtInputX_1.setVisible(true);
					txtInputY_1.setVisible(false);
					txtInputX_4.setVisible(false);
					txtInputY_4.setVisible(false);
					
				}
				
				
			}
		});
		
		btnCalculateArea.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent arg0) {
				if(comboBox.getSelectedItem().toString().equals("rectangle")) {
					double rect_width = Math.abs(Double.parseDouble(txtInputX.getText()) - Double.parseDouble(txtInputX_1.getText()));
					double rect_height = Math.abs(Double.parseDouble(txtInputY.getText()) - Double.parseDouble(txtInputY_1.getText()));

					double rect_Area = rect_height * rect_width;
					lblNewLabel.setText("Area = " + rect_Area);
					lblNewLabel.setVisible(true);
					
				}
				
				 if (comboBox.getSelectedItem().toString().equals("trangle")) {
					
					
					 double trangle_Area = 0.5 * Math.abs(Double.parseDouble(txtInputX.getText()) * Double.parseDouble(txtInputY_1.getText())+
							 Double.parseDouble(txtInputX_1.getText()) * Double.parseDouble(txtInputY_4.getText())+
							 Double.parseDouble(txtInputX_4.getText()) * Double.parseDouble(txtInputY.getText())-
							 Double.parseDouble(txtInputY.getText()) * Double.parseDouble(txtInputX_1.getText())-
							 Double.parseDouble(txtInputY_1.getText()) * Double.parseDouble(txtInputX_4.getText())-
							 Double.parseDouble(txtInputX.getText()) * Double.parseDouble(txtInputY_4.getText())
							 );
					lblNewLabel.setText("Area = " + trangle_Area);
					lblNewLabel.setVisible(true);
					
				}
				
				 if (comboBox.getSelectedItem().toString().equals("circle")) {
					 					
					double circle_Area = Math.PI * Double.parseDouble(txtInputX_1.getText()) * Double.parseDouble(txtInputX_1.getText());
					lblNewLabel.setText("Area = " + circle_Area);
					lblNewLabel.setVisible(true);
				}
				
			}
		});
		
		
		textField = new JTextField();
		textField.setBounds(10, 30, 86, 22);
		frame.getContentPane().add(textField);
		textField.setColumns(10);
		
		
		JPanel panel_1 = new JPanel();
		panel_1.setBounds(257, 24, 1083, 677);
		frame.getContentPane().add(panel_1);;
		panel_1.setBorder(BorderFactory.createLineBorder(Color.BLACK,1));
		
		
		btnPlot.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent arg0) {
				// TODO Auto-generated method stub
//				Graphics gr = getGraphics();
//				Graphics2D graphics2d = (Graphics2D)gr;
//				graphics2d.setColor(Color.black);
//				graphics2d.fillRect(0, 0, 20, 20);
//				
//				Shape rectShape = new Rectangle(0 , 0 , 20 , 20);
//				graphics2d.draw(rectShape);
//				repaint();
				
			}
		});
		
		
		
		
		
	}

//	@Overrid
//	public void paint(Graphics arg0) {
//		// TODO Auto-generated method stub
//		Graphics2D graphics2d = (Graphics2D)arg0;
//		graphics2d.setColor(Color.white);
//		graphics2d.fillRect(0, 0, this.getWidth(), this.getHeight());
//		
//		Shape rectShape = new Rectangle(0 , 0 , 20 , 20);
//		graphics2d.draw(rectShape);
//		
//		super.paint(arg0);
//	}
	
	
	
	
	
	
}
